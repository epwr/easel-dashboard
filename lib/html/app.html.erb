<%#
    Notes on the refactor for HTML/CSS stuff:
      - Think about how I want to build the CSS/JS/HTML stuff. Do I want to send
        as one file? Multiple different ones?
      - Fix the ugliness that is the HTML for the main interface. Build it initially
       as an empty <div> that has the write surface/interface classes, and is
       positioned properly. Then use JS to load the first dashboard (or the first)
       command.
        - Why is there a span.h2 instead of just an h2? the line break. Fix with
          flex?
        - Why do commands and dashboards need different html? Can't it just be a
          different onclick (and I guess remove the 'Run' button)?
        - Need to show state a little better - how to highlight the current
          dashboard or command?
%><!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>
      <%= $config[:title] %>
    </title>
    <link rel="stylesheet" href="/app.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js"></script>
    <script src="app.js" charset="utf-8"></script>
  </head>
  <body>
    <div class="header">
      <div class="header-logo h2">
        <%= $config[:header_logo] %>
        <%= $config[:header_title] %>
      </div>
    </div>
    <div class="screen">
      <div class="cmd-picker">

        <%# Dashboards %>
        <% $config[:dashboards].each do |dashboard| %>
          <div class="command-box">
            <div class="command-info"
              onclick="load_pane('<%= dashboard[:id] %>')"
              id="dash-<%=dashboard[:id]%>"
              data-id="<%=dashboard[:id]%>">
              <h2><%= dashboard[:name] %></h2>
              <p><%= dashboard[:desc] %></p>
            </div>
            <div class="command-controls">
              <div class="command-icon"
                id="cmd-<%=dashboard[:id]%>-log-icon"
                onclick="load_pane('<%= dashboard[:id] %>')">
                Show
              </div>
            </div>
          </div>
        <% end %>

        <%# Commands %>
        <% $config[:commands].each do |command| %>
          <div class="command-box">
            <div class="command-info"
              onclick="load_pane(<%=command[:id]%>)"
              id="cmd-<%=command[:id]%>"
              data-id="<%=command[:id]%>"
              data-cmd="<%=command[:cmd]%>">
              <h2><%= command[:name] %></h2>
              <p><%= command[:desc] %></p>
            </div>
            <div class="command-controls">
              <div class="command-icon"
                id="cmd-<%=command[:id]%>-run-icon"
                onclick="toggle_run(<%= command[:id] %>)">
                Run
              </div>
              <div class="command-icon"
                id="cmd-<%=command[:id]%>-log-icon"
                onclick="load_pane(<%=command[:id]%>)">
                Show
              </div>
            </div>
          </div>
        <% end %>

      </div>
      <div class="interface surface" id="primary-display">
        <div id="interface-title">
          <span class="h2" id="interface-state">Waiting:</span>
          <span id="interface-state-details"></span>
        </div>
        <div class="interface-output scroll-content">
          <div id="dash-elem">
          </div>
          <pre class="output-pane" id="output-pane">Click 'Run' to run a command and see it's output.

Click 'Help' (below) to see more.</pre>
        </div>
        <div class="interface-commands">
          <div class="top-shadow"></div>
          <div class="interface-button"
            onclick="show_help_message()">
            Help
          </div>
          <div class="interface-button"
            onclick="console.log('Save output button has not been implemented.')">
            Save Output
          </div>
          <div class="interface-button"
            onclick="console.log('Close server button has not been implemented.');">
            Close Server
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      dddisp = document.getElementById("primary-display");
      console.log(dddisp);
      while (dddisp.childNodes[0] != null) dddisp.removeChild(dddisp.childNodes[0]);
      console.log(dddisp);
      new_display = create_dashboard("My Title is Great!", "This is not a good Description.", []);
      console.log(new_display);
      dddisp.textContext = '';
      dddisp.appendChild(new_display);
      console.log("I ran");
    </script>
  </body>
</html>
